<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on sysadm.life</title>
    <link>https://sysadm.life/posts/</link>
    <description>Recent content in Posts on sysadm.life</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Jun 2020 18:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://sysadm.life/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Modifying Openshifts CoreOS ignition files</title>
      <link>https://sysadm.life/posts/openshift_static_ip_dhcpd/</link>
      <pubDate>Mon, 22 Jun 2020 18:00:00 +0000</pubDate>
      
      <guid>https://sysadm.life/posts/openshift_static_ip_dhcpd/</guid>
      <description>This article was put together to help assist performing Openshift 4 deployments on VMWare ESXi where static IPs are required but where DHCP is available and is allowed to give out temporary addresses. Doing it this way as (opposed to my last article where DHCP was not used) allows us to use the ova templates and will not require the creation of any separate boot isos. This is possible as enabling DHCP will allow the machines that have been created with the just the OVAs to boot first using a random DHCP given IP.</description>
    </item>
    
    <item>
      <title>Installing Openshift 4 on ESXi using Packet</title>
      <link>https://sysadm.life/posts/openshift_static_ip_disconnected_esxi_install/</link>
      <pubDate>Sun, 14 Jun 2020 18:00:00 +0000</pubDate>
      
      <guid>https://sysadm.life/posts/openshift_static_ip_disconnected_esxi_install/</guid>
      <description>This article aims to present the steps required to create the minimum necessary infrastructure to install and gain familiarity with Openshift 4.4 on VMware ESXi (hosted on packet.com) using static IP addresses in a disconnected environment&amp;hellip; so a bit more than the standard run of the mill install!
So why did I choose this setup? Well, I chose to use Packet as they provide easily provisionable bare metal in the cloud that is reasonably priced and I&amp;rsquo;m hoping that if someone wanted to replicate this setup they could easily do so following the below steps.</description>
    </item>
    
    <item>
      <title>Integrating RH-SSO (Keycloak) to ADFS</title>
      <link>https://sysadm.life/posts/rh_sso_keycloak_to_adfs_using_saml_integration/</link>
      <pubDate>Sat, 11 Apr 2020 18:00:00 +0000</pubDate>
      
      <guid>https://sysadm.life/posts/rh_sso_keycloak_to_adfs_using_saml_integration/</guid>
      <description>This article aims to present the steps required to create the minimum necessary infrastructure, to gain familiarity with, and test Red Hat Single Sign-On (SSO) and its integration with Microsoft Active Federation Services (ADFS) via the SAML protocol.
Most businesses usually have a large Windows estate and therefore use Active Directory (AD) as it provides a single source of user management in the organisation. Many organizations often incorporate additional authentication programs and protocols in tandem with AD, including RH-SSO for example.</description>
    </item>
    
    <item>
      <title>Porting Go to SPARC Solaris</title>
      <link>https://sysadm.life/posts/porting_golang_to_sparc/</link>
      <pubDate>Tue, 18 Dec 2018 18:00:00 +0000</pubDate>
      
      <guid>https://sysadm.life/posts/porting_golang_to_sparc/</guid>
      <description>This article aims to present the steps required to create a port of Go for SPARC Solaris. The &amp;lsquo;spark&amp;rsquo; that kicked this idea off was part of an aspiration to first get the Prometheus node exporter for the core machine metrics running on SPARC tin for Solaris 11.3, then potentially other node exporters such as the JMX exporter and a Oracle DB exporter.
Note: Oracle announced Go version 1.7.6 will be available in Solaris 11.</description>
    </item>
    
  </channel>
</rss>